[Command]
Command="
    copyq:
    var snippetsTabName = 'Snippets'
    // List snippets instead of search combo box?
    var listSnippets = false

    function newVarRe(content) {
      return new RegExp('\\\\${' + content + '}', 'g')
    }

    function getText(item) {
      return str(item[mimeText] || '')
    }

    function assignPlaceholder(snippet, placeholder, value) {
      return snippet.replace(newVarRe(placeholder + ':?.*?'), value)
    }

    function fuzzyIndexOf(snippetNames, snippetName) {
        var re = new RegExp(snippetName, 'i')
        for (var i in snippetNames) {
          if (snippetNames[i].match(re))
            return i;
        }
        return -1
    }

    function loadSnippets(snippetNames, snippets)
    {
      var tabs = tab()
      for (var i in tabs) {
        var tabName = tabs[i];
        if (tabName != snippetsTabName && tabName.indexOf(snippetsTabName + '/') != 0)
          continue;

        tab(tabName)
        var prefix = tabName.substring(snippetsTabName.length + 1)
        if (prefix)
          prefix += ': '
        for (var j = 0; j < size(); ++j) {
          var snippet = getitem(j)
          var snippetName = str(snippet[mimeItemNotes] || getText(snippet))
          snippetNames.push(prefix + snippetName)
          snippets.push(snippet)
        }
      }
    }

    function askForSnippet(snippetNames, snippets) {
      var list = listSnippets ? '.list:' : ''
      var snippet = dialog(
        '.title', 'Select Snippet',
        list + 'Snippet', snippetNames
      ) || abort()

      if (listSnippets)
          return snippets[snippet]

      var i = snippetNames.indexOf(snippet)
      if (i != -1)
        return snippets[i]

      i = fuzzyIndexOf(snippetNames, snippet)
      if (i != -1)
        return snippets[i]

      popup(
        'Snippet Not Found',
        'No matching snippet found for \"' + snippetName + '\"!'
      )
      abort()
    }

    function getPlaceholders(snippet) {
      var placeholders = {}
      var m
      var reVar = newVarRe('([^:}]*):?(.*?)')
      while ((m = reVar.exec(snippet)) !== null) {
        if (!(m[1] in placeholders))
          placeholders[m[1]] = m[2].replace('\\\\n', '\\n')
      }

      return placeholders
    }

    function askToAssignPlaceholders(snippet) {
      var placeholders = getPlaceholders(snippet)

      if (placeholders.length == 0)
        return snippet

      var label = escapeHtml(snippet)
        .replace(newVarRe('([^:}]*).*?'), '<b>$1</b>')

      var dialogVars = [
        '.title', 'Set Snippet Values',
        '.label', label
      ]

      for (var name in placeholders) {
        var values = placeholders[name].split(',')
        if (name.substring(0,5)=='date_'){
          values = dateString(values[0])  // date format: see http://doc.qt.io/qt-5/qdatetime.html#toString
          if (values == ''){
            values = 'Invalid datetime format'
          }
        }
        dialogVars.push(name)
        dialogVars.push((values.length == 1) ? values[0] : values)
      }

      var values = dialog.apply(this, dialogVars) || abort()

      if (!(values instanceof Object))
        return assignPlaceholder(snippet, '.*?', values)

      for (var name in placeholders)
        snippet = assignPlaceholder(snippet, name, values[name])

      return snippet
    }

    function pasteSnippet(mime, content) {
      copy(mime, content)
      copySelection(mime, content)
      paste()
    }

    var snippetNames = []
    var snippets = []
    loadSnippets(snippetNames, snippets)

    var snippet = askForSnippet(snippetNames, snippets)

    var textSnippet = getText(snippet)
    if (textSnippet)
      pasteSnippet(mimeText, askToAssignPlaceholders(textSnippet))
    else
      pasteSnippet(mimeItems, pack(snippet))"
GlobalShortcut=Meta+Alt+Q
Icon=\xf1fb
Name=Snippets
